# Intro page
page_one <- tabPanel(
"Introduction"
)
#page 2 - Race inequality among victims
page_two <- tabPanel(
"Race Inequality Among Victims",
plotlyOutput("tab2_graph"),
"In this graph, we compare the race proportions of the population with
the race proportions of the victims killed in police shootings."
)
# page three content here
side_three <- sidebarPanel(
selectInput(inputId = "race.1",
label = h3("Race 1"),
c("White" = "W",
"Asian" = "A",
"Black" = "B",
"Hispanic" = "H",
"Other" = "O",
"Native American" = "N")
),
selectInput(inputId = "race.2",
label = h3("Race 2"),
c("White" = "W",
"Asian" = "A",
"Black" = "B",
"Hispanic" = "H",
"Other" = "O",
"Native American" = "N")
),
selectInput(inputId = "bodycam",
label = h3("Used a Body Camera"),
c("Yes" = "TRUE",
"No" = "FALSE"))
)
main_three <- mainPanel(
plotlyOutput("tab3_graph")
)
#page 3 - Usage of body camera
page_three <- tabPanel(
"Usage of Body Camera",
sidebarLayout(side_three, main_three)
)
page_four <- tabPanel(
"Conclusion"
)
# Conclusion and insights from analysis and visualizations
page_five <- tabPanel(
"Conclusion"
)
ui <- navbarPage(
"Police Violence",
page_one,
page_two,
page_three,
page_four
)
runApp()
graph <- ggplot(data = filtered_data) +
geom_point(mapping = aes(x = B, y = W, fill = state), size = 1.75) +
xlim(-1, 100) +
ylim(-1, 100) +
geom_abline(intercept = 0, slope = 1) +
labs(title = "Number of White and Black People Killed by Police Without a Body Camera",
x = "Number of Black People Killed",
y = "Number of White People Killed") +
theme(legend.position = "none")
graph <- ggplotly(graph)
graph
filtered_data <- data %>%
filter(body_camera == T) %>%
filter(race == "W" | race == "B") %>%
group_by(state, race) %>%
summarise(total = length(race)) %>%
spread(key = race,
value = total)
filtered_data <- data %>%
filter(body_camera == T) %>%
filter(race == "W" | race == "B") %>%
group_by(state, race) %>%
summarise(total = length(race)) %>%
spread(key = race,
value = total)
#make dataframe for proportion of race according to US census:
#https://www.census.gov/quickfacts/fact/table/US/PST045219
#unknown race was not included as unable to accurately identify
#which US Census Race cateogory victims belong to.
Victim.s.race <- c("Asian", "Black", "Hispanic", "Native American",
"Pacific Islander", "White")
proportion <- c(5.9, 13.4, 18.5, 1.3, 0.2, 60.1)
population_race <- data.frame(Victim.s.race, proportion)
totalvictims_race <- victim_data %>%
group_by(Victim.s.race) %>%
filter(Victim.s.race != "Unknown race")%>%
summarize(totalnum = n()) %>%
mutate(proportion = (totalnum / sum(totalnum)) * 100)
#combine the data sets
final_data <- merge(totalvictims_race, population_race,by= "Victim.s.race")
colnames(final_data) <- c("race", "totalnum","victim_prop",
"population_prop")
final_data_long <-
melt(final_data[, c("race", "population_prop", "victim_prop")],
id.vars = 1)
#interactive visualization: compare population's race proportions with
#victims race proportion to see inequality
grouped_bar_chart<- ggplotly(
ggplot(data = final_data_long, aes(x = race, y= value)) +
geom_bar(aes(fill = variable), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(
title ="Proportion of Race Population vs. Proportion of Race of Victims",
x = "Race",
y = "Proportion (in Percent)",
caption ="Source: US 2019 Census & Mapping Police Violence"))
grouped_bar_chart
runApp()
#page 2 - Race inequality among victims
page_two <- tabPanel(
"Race Inequality Among Victims",
plotlyOutput("tab2_graph"),
"In this graph, we compare the race proportions of the population with
the race proportions of the victims killed in police shootings."
)
runApp()
library("shiny")
library("tidyverse")
library("plotly")
library("reshape2")
# Intro page
page_one <- tabPanel(
"Introduction",
tags$body(
mainPanel(
h1("Police Violence in the US"),
h2("Trigger Warning:"),
p("The following content may contain triggering and/or sensitive material.
The website discusses topics of racism, guns, and violence.
Audience discretion is advised."),
img( src = "police-brutality.jpeg", width = "750x", height = "450px"),
h2("Purpose"),
p("The purpose of our research study is to investigate the racial
inequalities and inequities  around police violence in the United
States. We will observe the demographics of various races impacted by
police violence, specifically, victims who have been shot. We seek to
see the differences and injustice in police violence. We hope to raise
awareness about the number of people who have been victims of police
brutality and propose a plan of action.")
)
))
#page 2 - Race inequality among victims
page_two <- tabPanel(
"Race Inequality Among Victims",
plotlyOutput("tab2_graph"),
"In this graph, we compare the race proportions of the population with
the race proportions of the victims killed in police shootings."
)
# page three content here
side_three <- sidebarPanel(
selectInput(inputId = "race.1",
label = h3("Race 1"),
c("White" = "W",
"Asian" = "A",
"Black" = "B",
"Hispanic" = "H",
"Other" = "O",
"Native American" = "N")
),
selectInput(inputId = "race.2",
label = h3("Race 2"),
c("White" = "W",
"Asian" = "A",
"Black" = "B",
"Hispanic" = "H",
"Other" = "O",
"Native American" = "N")
),
selectInput(inputId = "bodycam",
label = h3("Used a Body Camera"),
c("Yes" = "TRUE",
"No" = "FALSE"))
)
main_three <- mainPanel(
plotlyOutput("tab3_graph")
)
#page 3 - Usage of body camera
page_three <- tabPanel(
"Usage of Body Camera",
sidebarLayout(side_three, main_three)
)
page_four <- tabPanel(
"Conclusion"
)
# Conclusion and insights from analysis and visualizations
page_five <- tabPanel(
"Conclusion"
)
ui <- navbarPage(
"Police Violence",
page_one,
page_two,
page_three,
page_four
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filtered_data
View("filtered_data")
data
View("data")
runApp()
View(data)
View(data)
View(data)
runApp()
runApp()
data
View(data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Documents/info478/info478-project/final")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(lintr)
lint("app_server")
lint("app_server.R")
lint("app_server.R")
library(styler)
styler::style_file("app_server.R")
lint("app_server.R")
lint("app_server.R")
lint("app_server.R")
library("shiny")
library("tidyverse")
library("plotly")
library("openintro")
library("reshape2")
server <- function(input, output) {
# Page 2
output$tab2_graph <- renderPlotly({
data <- read.csv("../shootings_wash_post.csv")
victim_data <- read.csv("victim_race_data.csv")
# make dataframe for proportion of race according to US census:
# https://www.census.gov/quickfacts/fact/table/US/PST045219
# unknown race was not included as unable to accurately identify
# which US Census Race cateogory victims belong to.
Victim.s.race <- c(
"Asian", "Black", "Hispanic", "Native American",
"Pacific Islander", "White"
)
proportion <- c(5.9, 13.4, 18.5, 1.3, 0.2, 60.1)
population_race <- data.frame(Victim.s.race, proportion)
totalvictims_race <- victim_data %>%
group_by(Victim.s.race) %>%
filter(Victim.s.race != "Unknown race") %>%
summarize(totalnum = n()) %>%
mutate(proportion = (totalnum / sum(totalnum)) * 100)
# combine the data sets
final_data <- merge(totalvictims_race, population_race,
by = "Victim.s.race")
colnames(final_data) <- c(
"race", "totalnum", "victim_prop",
"population_prop"
)
final_data_long <-
melt(final_data[, c("race", "population_prop", "victim_prop")],
id.vars = 1
)
# interactive visualization: compare population's race proportions with
# victims race proportion to see inequality
grouped_bar_chart <- ggplotly(
ggplot(data = final_data_long, aes(x = race, y = value)) +
geom_bar(aes(fill = variable), stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(
title = "Proportion of Race Population vs. Proportion of Race of
Victims",
x = "Race",
y = "Proportion (in Percent)",
caption = "Source: US 2019 Census & Mapping Police Violence",
fill = "Type of Proportion"
)
)
})
# Page 3
output$tab3_graph <- renderPlotly({
data_tab3 <- read.csv("shootings_wash_post_copy.csv")
data_tab3$state <- abbr2state(data_tab3$state)
data_tab3$body_camera <- as.character(data_tab3$body_camera)
filtered_data_tab3 <- reactive({
data_tab3 %>%
dplyr::filter(body_camera == as.character(input$bodycam)) %>%
dplyr::filter(race == input$race.1 | race == input$race.2) %>%
group_by(state, race) %>%
summarise(total = length(race)) %>%
spread(
key = race,
value = total
) %>%
dplyr::arrange(
"state",
input$race.1,
input$race.2
)
})
graph <- ggplot(data = filtered_data_tab3(), aes(fill = state)) +
geom_point(mapping = aes_string(
x = input$race.1,
y = input$race.2
)) +
xlim(0, 90) +
ylim(0, 90) +
geom_abline(intercept = 0, slope = 1) +
labs(
title = ifelse(input$bodycam == "TRUE", "Number of People Killed by
Police With a Body Camera",
"Number of People Killed by Police Without a Body Camera"
),
x = "Number of People Killed (Race 1)",
y = "Number of People Killed (Race 2)"
) +
theme(legend.position = "none")
graph <- ggplotly(graph)
})
}
data <- read.csv("../shootings_wash_post.csv")
setwd("~/Documents/info478/info478-project/final")
data <- read.csv("../shootings_wash_post.csv")
styler::style_file("app_ui.R")
lint("app_ui.R")
lint("app_ui.R")
lint("app.R")
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Documents/info478/workbook-5-yuhanizaly")
nhanes_design <-svydesign(
id = ~sdmvpsu,
nest = TRUE,
strata = ~sdmvstra,
weights = ~wtmec2yr,
data = nhanes_updated
)
#Yuhaniz Aly
# Workbook 6: analyze NHANES data
# Set up
library(foreign)
library(survey)
library(Hmisc)
library(dplyr)
#load demographic data
demographics <- sasxport.get('demo_data.xpt')
#load alcohol data
alcohol <- sasxport.get('ALQ_I.xpt')
#merge data --what's the unique identifying characteristics?
nhanes <- left_join(alcohol, demographics, by = 'seqn')
#sum of survey weights -- interpret the results
sum_survey_wt <- sum(demographics$wtint2yr)
# this is the total US population at the time of the collection
#add more
nhanes_updated <- nhanes %>%
mutate(alq151 = replace(alq151, alq151 == 2, 0),
alq151 = replace(alq151, alq151 == 7 | alq151 == 9, NA))
#create survey design
nhanes_design <-svydesign(
id = ~sdmvpsu,
nest = TRUE,
strata = ~sdmvstra,
weights = ~wtmec2yr,
data = nhanes_updated
)
#calc survey mean
survey_mean <- svymean(~alq151, nhanes_design, na.rm = T)
#mean by gender
mean_by_gender <- svyby(~alq151, ~riagendr,
nhanes_design, svymean, na.rm = T)
#load demographic data
demographics <- sasxport.get('demo_data.xpt')
library(foreign)
library(survey)
library(Hmisc)
library(dplyr)
#load demographic data
demographics <- sasxport.get('demo_data.xpt')
#load alcohol data
alcohol <- sasxport.get('ALQ_I.xpt')
nhanes <- left_join(alcohol, demographics, by = 'seqn')
nhanes_updated <- nhanes %>%
mutate(alq151 = replace(alq151, alq151 == 2, 0),
alq151 = replace(alq151, alq151 == 7 | alq151 == 9, NA))
setwd("~/Documents/info478/workbook-5-yuhanizaly")
#Yuhaniz Aly
# Workbook 6: analyze NHANES data
# Set up
library(foreign)
library(survey)
library(Hmisc)
library(dplyr)
#load demographic data
demographics <- sasxport.get('demo_data.xpt')
#load alcohol data
alcohol <- sasxport.get('ALQ_I.xpt')
#merge data --what's the unique identifying characteristics?
nhanes <- left_join(alcohol, demographics, by = 'seqn')
#sum of survey weights -- interpret the results
sum_survey_wt <- sum(demographics$wtint2yr)
# this is the total US population at the time of the collection
#add more
nhanes_updated <- nhanes %>%
mutate(alq151 = replace(alq151, alq151 == 2, 0),
alq151 = replace(alq151, alq151 == 7 | alq151 == 9, NA))
#create survey design
nhanes_design <-svydesign(
id = ~sdmvpsu,
nest = TRUE,
strata = ~sdmvstra,
weights = ~wtmec2yr,
data = nhanes_updated
)
#calc survey mean
survey_mean <- svymean(~alq151, nhanes_design, na.rm = T)
#mean by gender
mean_by_gender <- svyby(~alq151, ~riagendr,
nhanes_design, svymean, na.rm = T)
